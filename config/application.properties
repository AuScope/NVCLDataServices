# NVCL data services configuration file.
# fill in all values enclosed in < >
# When finished start the NVCLDataServices Service from your service controller
# tsg.dbType is either oracle or sqlserver
tsg.dbtype=<DBTYPE>
# tsg.connectionString format depends on RDBMS and is not jdbc
# for oracle the format is HOSTNAME:PORT/SERVICENAME
# for sqlserver the format is HOSTNAME@DATABASENAME
tsg.connectionString=<TSGCONNECTIONSTRING> 
tsg.username=<DB_USERNAME>
tsg.password=<DB_PASSWORD>
# sysadmin.email will be used as the from address when sending file download links
sysadmin.email=<SYSADMIN EMAIL>
# webapp.url is the externally resolvable url of the NVCLData/DownloadServices
webapp.url=http://<HOSTNAME>/NVCLDataServices/
# download.url is the location of file downloads after they have been prepared and should map through your server to download.rootpath
download.url=http://<HOSTNAME>/NVCLPreparedDownloads/
download.rootpath=./data/serve/
# download.cachepath is a working area for data file preparation.
download.cachepath=./data/working/
# tsg.scriptpath is another working area for data file preparation.
tsg.scriptpath=./data/script/
# tsg.exepath is the path to the TSG executable.
tsg.exepath="tsgeol8.exe"
# msgTimetoLiveDays is the number of days data files will remain in cache before being cleaned up.
msgTimetoLiveDays=30
# smtp.enabled enables email notifications when data files are prepared.
smtp.enabled=false
# smtp.host is your email server's host name
smtp.host=<email hostname>
smtp.port=25
smtp.username=<email username>
smtp.password=<email password>
# smtp.useauth enables authentication on the email server.
smtp.useauth=false
# smtp.enabledebug turns on email debuging, this can help with email server configuration issues
smtp.enabledebug=false

# NVCLDataServices jdbc configuration file.
# fill in all values enclosed in < >
# jdbc.dbType is either oracle or sqlserver
jdbc.dbType=<DBTYPE>
# jdbc.driverClassName is either oracle.jdbc.OracleDriver or com.microsoft.sqlserver.jdbc.SQLServerDriver
jdbc.driverClassName=<DRIVERNAME>
# jdbc.url format depends on which RDBMS you're using
# for oracle the format is jdbc:oracle:thin:@<HOSTNAME>:<PORT>:<SID>
# for sqlserver the format is jdbc:sqlserver://<HOSTNAME>\<INSTANCE_NAME>:<PORT>;database=<DATABASE_NAME>;
jdbc.url= <DATABASE_URL>
jdbc.username=<DB USERNAME>
jdbc.password=<DB PASSWORD>
jdbc.maxTotal=100
jdbc.maxIdle=10
jdbc.minIdle=0
jdbc.maxWaitMillis=10000
jdbc.minEvictableIdleTimeMillis=300000
jdbc.timeBetweenEvictionRunsMillis=300000
jdbc.numTestsPerEvictionRun=20
jdbc.poolPreparedStatements=true
jdbc.maxOpenPreparedStatements=100
jdbc.testOnBorrow=true
# jdbc.validationQuery is the default query for checking database connection status
# for oracle use SELECT 1 from dual
# for sqlserver use SELECT CURRENT_TIMESTAMP
jdbc.validationQuery=<DB_Validation_Query>

# Embedded ActiveMQ Configuration 
spring.activemq.broker-url=vm://embedded
# To disable the embeded activemq broker and connect to a standalone one change the spring.activemq.broker-url property. e.g.
# spring.activemq.broker-url=tcp://localhost:61616

server.port = 8080

# disable verbose error messages for clients
server.error.whitelabel.enabled=false

logging.file.name = NVCLDataServicesLogs/NVCLDataServices.log

server.servlet.context-path=/NVCLDataServices

# set this property to NATIVE to use jetty's built in support for forwarded headers
server.forward-headers-strategy=NATIVE

# this option will forcefully clear space in the cache if the available space drops below 10gb
# this will ensure the cache doesnt get full but could cause files to be cleaned before the user
# has had a chance do download them
enableAggressiveCacheClearing=true

# this option will check if space is available in the cache and if so will build files so they 
# will be available for users when they request them
enableAutoCacheBuilder=false

# azure blob storage connection string use this if connecting to the storage account with a key
# azureStorageConnectionString=

# azure blob storage endppoint use this if using manage identity authentication.  e.g. https://nvcldatastore.blob.core.windows.net/
# azureStorageEndPoint=

# Azure blob storage container name to place the nvcl binary data.  default is nvcldatasets. set this property to override the default.
# azureContainerName=

# file mirror that holds cached datasets.  must end with a slash /
# e.g. https://nvclstore.z8.web.core.windows.net/Tas/
# downloadFileMirror=

# sets the minimum available disk space that will be maintained in the download.rootpath folder.
# If available disk space drops below this value then the app will remove old zip bundles until the mimimum is restored.
minimumDiskspaceinGb=20