<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd">

	<context:annotation-config />   <!-- turn annotation on -->

	<context:property-placeholder
		location="classpath*:jdbc.properties,classpath*:unittest.properties,classpath:config.properties" />

	<bean id="createConfig" class="org.auscope.nvcl.server.vo.ConfigVo">
		<!--reference values read by PropertyPlaceholderConfigurer bean -->
		<property name="jdbcDbType" value="${tsg.dbtype}" />
		<property name="jdbcURL" value="${tsg.connectionString}" />
		<property name="jdbcUsername" value="${tsg.username}" />
		<property name="jdbcPassword" value="${tsg.password}" />
		<property name="sysAdminEmail" value="${sysadmin.email}" />
		<property name="webappURL" value="${webapp.url}" />
		<property name="geoserverUrl" value="${geoserver.url}" />
		<property name="downloadURL" value="${download.url}" />
		<property name="downloadRootPath" value="${download.rootpath}" />
		<property name="downloadCachePath" value="${download.cachepath}" />
		<property name="tsgScriptPath" value="${tsg.scriptpath}" />
		<property name="tsgExePath" value="${tsg.exepath}" />
		<property name="sendEmails" value="${smtp.enabled:false}" />
		<property name="msgTimetoLiveDays" value="${msgTimetoLiveDays:31}" />
	</bean>


	<bean id="unittestVo" class="org.auscope.nvcl.server.vo.UnitTestVo">
		<property name="testDatasetId" value="${test.DatasetId}" />
		<property name="testHoleIdentifier" value="${test.HoleIdentifier}" />
		<property name="testLogIdMosaic" value="${test.LogIdMosaic}" />
		<property name="testLogIdTrayThumbnail" value="${test.LogIdTrayThumbnail}" />
		<property name="testLogIdTrayImage" value="${test.LogIdTrayImage}" />
		<property name="testLogIdImagery" value="${test.LogIdImagery}" />
		<property name="testLogIdType1" value="${test.LogIdType1}" />
		<property name="testLogIdType2" value="${test.LogIdType2}" />
		<property name="testLogIdList" value="${test.LogIdList}" />
		<property name="testDomainlogId" value="${test.DomainlogId}" />
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="connectionProperties" value="defaultRowPrefetch=1000" />
	</bean>

	<bean id="nvclDataSvcDao" class="org.auscope.nvcl.server.dao.NVCLDataSvcDao" />

	<bean id="downSampledClassDataDao" class="org.auscope.nvcl.server.dao.DownSampledClassDataDao" />

	<bean id="downSampledFloatDataDao" class="org.auscope.nvcl.server.dao.DownSampledFloatDataDao" />

	<bean id="domainDataDao" class="org.auscope.nvcl.server.dao.DomainDataDao" />
	
	<bean id="logExtentsDao" class="org.auscope.nvcl.server.dao.LogExtentsDao" />

	<bean id="nvclDataSvc" class="org.auscope.nvcl.server.service.NVCLDataSvc" />

	<oxm:jaxb2-marshaller id="marshaller">
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.DatasetCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.ImageLogCollectionVo" />
		<oxm:class-to-be-bound name="org.auscope.nvcl.server.vo.LogCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.DomainDataCollectionVo" />
		<oxm:class-to-be-bound name="org.auscope.nvcl.server.vo.ScannedBoreholeVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.FeatureCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.SpectralLogCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.ProfLogCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.AlgorithmCollectionVo" />
		<oxm:class-to-be-bound
			name="org.auscope.nvcl.server.vo.ClassificationsCollectionVo" />
	</oxm:jaxb2-marshaller>

	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${activeMQ.url:tcp://localhost:61616}" />
	</bean>


	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- <property name="defaultDestination" ref="requestDestination" /> -->
		<property name="messageConverter" ref="nvclDownloadMessageConverter" />
	</bean>

	<bean id="tsgRequestDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="tsgdownload.request.queue" />
	</bean>

	<bean id="tsgReplyDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="tsgdownload.reply.queue" />
	</bean>

	<bean id="wfsRequestDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="wfsdownload.request.queue" />
	</bean>

	<bean id="wfsReplyDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="wfsdownload.reply.queue" />
	</bean>

	<bean id="nvclDownloadGateway" class="org.auscope.nvcl.server.service.NVCLDownloadGateway">
		<property name="jmsTemplate" ref="jmsTemplate" />
	</bean>

	<bean id="nvclDownloadMessageConverter"
		class="org.auscope.nvcl.server.service.NVCLDownloadMessageConverter" />

	<bean id="tsgDownloadRequestSvc" class="org.auscope.nvcl.server.service.TSGDownloadRequestSvc">
		<property name="jmsTemplate" ref="jmsTemplate" />
		<property name="destination" ref="tsgReplyDestination" />
		<property name="mailSender" ref="mailSender" />
		<property name="config" ref="createConfig" />
	</bean>

	<bean id="wfsDownloadRequestSvc" class="org.auscope.nvcl.server.service.WFSDownloadRequestSvc">
		<property name="jmsTemplate" ref="jmsTemplate" />
		<property name="destination" ref="wfsReplyDestination" />
		<property name="mailSender" ref="mailSender" />
		<property name="config" ref="createConfig" />
	</bean>

	<bean id="nvclDownloadQueueBrowser"
		class="org.auscope.nvcl.server.service.NVCLDownloadQueueBrowser">
		<property name="jmsTemplate" ref="jmsTemplate" />
	</bean>

	<bean id="tsgDownloadRequestListener"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="tsgDownloadRequestSvc" />
		<property name="defaultListenerMethod" value="processRequest" />
		<property name="messageConverter" ref="nvclDownloadMessageConverter" />
		<property name="defaultResponseDestination" ref="tsgReplyDestination" />
	</bean>

	<bean id="tsgDownloadRequestContainer"
		class="org.springframework.jms.listener.SimpleMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="tsgRequestDestination" />
		<property name="messageListener" ref="tsgDownloadRequestListener" />
	</bean>

	<bean id="wfsDownloadRequestListener"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="wfsDownloadRequestSvc" />
		<property name="defaultListenerMethod" value="processRequest" />
		<property name="messageConverter" ref="nvclDownloadMessageConverter" />
		<property name="defaultResponseDestination" ref="wfsReplyDestination" />
	</bean>

	<bean id="wfsDownloadRequestContainer"
		class="org.springframework.jms.listener.SimpleMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="wfsRequestDestination" />
		<property name="messageListener" ref="wfsDownloadRequestListener" />
	</bean>
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${smtp.host:}" />
		<property name="port" value="${smtp.port:25}" />
		<property name="username" value="${smtp.username:}" />
		<property name="password" value="${smtp.password:}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.from">${sysadmin.email}</prop>
				<prop key="mail.smtp.auth">${smtp.useauth:}</prop>
				<prop key="mail.debug">${smtp.enabledebug:}</prop>
			</props>
		</property>
	</bean>

	<bean name="CleanUpDownloadFolder"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
			value="org.auscope.nvcl.server.service.CleanUpDownloadFolderJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="days" value="${msgTimetoLiveDays:31}" />
				<entry key="downloadfolderpath" value="${download.rootpath}" />
			</map>
		</property>
	</bean>

	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="CleanUpDownloadFolder" />
		<!-- run every morning at 6 AM -->
		<property name="cronExpression" value="0 0 6 * * ?" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	<property name="quartzProperties">
            <props>
	<prop key="org.quartz.threadPool.threadCount">1</prop>
	</props>
	</property>
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>


</beans>
